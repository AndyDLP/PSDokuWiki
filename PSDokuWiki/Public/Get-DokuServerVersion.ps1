function Get-DokuServerVersion {
<#
	.SYNOPSIS
		Returns the DokuWiki version of the remote Wiki server
	
	.DESCRIPTION
		Returns the DokuWiki version of the remote Wiki server
	
	.PARAMETER DokuSession
		The DokuSession (generated by New-DokuSession) from which to get the page list.
	
	.EXAMPLE
		PS C:\> $Version = Get-DokuServerVersion -DokuSession $DokuSession
	
	.EXAMPLE
		PS C:\> $version = Get-DokuServerVersion -DokuSession $DokuSession
	
	.OUTPUTS
		System.Management.Automation.PSObject
	
	.NOTES
		AndyDLP - 2018-05-28
#>
	
	[CmdletBinding()]
	[OutputType([psobject])]
	param
	(
		[Parameter(Mandatory = $true,
				   Position = 1,
				   HelpMessage = 'The DokuSession from which to get the page list.')]
		[ValidateScript({ ($_.WebSession -ne $null) -or ($_.Headers.Keys -contains "Authorization") })]
		[psobject]$DokuSession
	)
	
	$payload = (ConvertTo-XmlRpcMethodCall -Name "dokuwiki.getVersion") -replace "<value></value>", ""
	if ($DokuSession.SessionMethod -eq "HttpBasic") {
		$httpResponse = Invoke-WebRequest -Uri $DokuSession.TargetUri -Method Post -Headers $DokuSession.Headers -Body $payload -ErrorAction Stop
	} else {
		$httpResponse = Invoke-WebRequest -Uri $DokuSession.TargetUri -Method Post -Headers $DokuSession.Headers -Body $payload -ErrorAction Stop -WebSession $DokuSession.WebSession
	}
	
	$RawDokuVersion = [string]([xml]$httpResponse.Content | Select-Xml -XPath "//value/string").node.InnerText
	$CodeName = $RawDokuVersion | ForEach-Object -Process { [regex]::match($_, '(?<=")(.+)(?=")') } | Select-Object -ExpandProperty value
	$SplitVersion = $RawDokuVersion -split " "
	$VersionObject = New-Object PSObject -Property @{
		Server = $DokuSession.Server
		Type = $SplitVersion[0] # Does this even change?
		ReleaseDate = $SplitVersion[1] # TODO: Convert to date time - replace letter(s)?
		ReleaseName = $CodeName
	}
	return $VersionObject
}