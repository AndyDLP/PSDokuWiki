function Get-DokuServerRpcVersionSupported {
<#
	.SYNOPSIS
		Returns the servers minimum supported RPC API version.

	.DESCRIPTION
		Returns the servers minimum supported RPC API version.

	.PARAMETER DokuSession
		The DokuSession (generated by New-DokuSession) from which to get the supported RPC version.

	.EXAMPLE
		PS C:\> $RPCVersionsSupported = Get-DokuServerRpcVersionSupported -DokuSession $DSession

	.OUTPUTS
		System.Management.Automation.PSObject

	.NOTES
		AndyDLP - 2018-05-26
#>

	[CmdletBinding(PositionalBinding = $true)]
	[OutputType([psobject])]
	param
	(
		[Parameter(Mandatory = $true,
				   Position = 1,
				   ValueFromPipeline = $true,
				   HelpMessage = 'The DokuSession from which to get the supported version.')]
		[ValidateNotNullOrEmpty()]
		[PSObject]$DokuSession
	)

	begin {

	} # begin

	process {
		$payload = ConvertTo-XmlRpcMethodCall -Name "wiki.getRPCVersionSupported"
		if ($DokuSession.SessionMethod -eq "HttpBasic") {
			$httpResponse = Invoke-WebRequest -Uri $DokuSession.TargetUri -Method Post -Headers $DokuSession.Headers -Body $payload -ErrorAction Stop
		} else {
			$httpResponse = Invoke-WebRequest -Uri $DokuSession.TargetUri -Method Post -Headers $DokuSession.Headers -Body $payload -ErrorAction Stop -WebSession $DokuSession.WebSession
		}
		[int]$RPCVersionsSupported = ([xml]$httpResponse.Content | Select-Xml -XPath "//value/int").node.InnerText
		$VersionObject = New-Object PSObject -Property @{
			Server = $DokuSession.Server
			MinimumRpcVersionSupported = $RPCVersionsSupported
		}
		$VersionObject
	} # process

	end {

	} # end
}